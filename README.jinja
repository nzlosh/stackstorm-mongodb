# {{ pack["pack.yaml"].name }} integration pack

> {{ pack["pack.yaml"].description }}
{{ pack["pack.yaml"].author }} <{{ pack["pack.yaml"].email }}>


## Configuration

The following options are required to be configured for the pack to work correctly.

| Option | Type | Required | Secret | Description |
|---|---|---|---|---|
{% for key, value in pack["config.schema.yaml"].items() -%}
| `{{ key }}` | {{ value.type }} | {{ value.required }} | {{ value.secret }} | {{ value.description }} |
{% endfor %}


### High available setups

Mongo databases using replication must have the replica set in the configuration or the action will not switch to the PRIMARY server and will fail.

## Actions

{% if actions | length > 0 %}
The pack provides the following actions:

{% for key, value in actions.items() -%}
### {{ value.name }}
_{{ value.description }}_

| Parameter | Type | Required | Secret | Description |
|---|---|---|---|---|
{% for p_key, p_value in value.parameters.items() -%}
| `{{ p_key }}` | {{ p_value.type | default("n/a") }} | {{ p_value.required | default("default") }} | {{ p_value.secret | default("default") }} | _{{ p_value.description | default("Unavailable") }}_ |
{% endfor -%}


{% endfor %}
{% else %}
There are no actions available for this pack.
{% endif %}

## Sensors
{% if sensors | length > 0 %}
The following sensors and triggers are provided:
{% for key, value in sensors.items() %}
### Class {{ value.class_name }}
_{{ value.description }}_

{% for trigger in value.trigger_types -%}
| Trigger Name | Description |
|---|---|
| `{{ trigger.name }}` | _{{ trigger.description | default("Unavailable") }}_ |
{% endfor %}


{% endfor %}
{% else %}
There are no sensors available for this pack.
{% endif %}


## Authentication

 * To be able to administer MongoDB using this pack, a user account that has the privileges to manipulate databases, collections, documents is required.

   For simlicity sakes, the `root` role has above and beyond the required access to preform any actions in this pack.  However, it is not recommended to use such a role in production.  The exact permissions to grant to the user will depend on the security policies of the organisation operating MongoDB.

   As an example of creating a root user account:
   ```
   db.createUser("<db_admin_account>", { roles: [{role: "root", db: "admin"}], pwd: "<db_admin_password>"})
   ```

   For more information on authentication and authorisation, seek help from the Mongo manual:
   - https://docs.mongodb.com/manual/core/authentication/
   - https://docs.mongodb.com/manual/core/authorization/
   - https://docs.mongodb.com/manual/core/security-transport-encryption/


## Limitations

 * This pack is intended for MongoDB administration only and does not provide any data querying functionality.


## References

  * [pymongo](https://pymongo.readthedocs.io/en/stable/index.html) Python module is used in this pack.


## Acknowledgements
  * Ant√º Plasma Suite for the use of the mongodb icon under the CREATIVE COMMONS BY-SA 3.0. licence.

<sub>Documentation generated using [pack2md](https://github.com/nzlosh/pack2md)</sub>
